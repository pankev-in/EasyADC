
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000070  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000070  000000e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e4  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000114  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000012a  00000000  00000000  00000134  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000d1  00000000  00000000  0000025e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000013a  00000000  00000000  0000032f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  0000046c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000168  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000024  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	1b c0       	rjmp	.+54     	; 0x6c <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRB |= (1 << DDB1);
  38:	b9 9a       	sbi	0x17, 1	; 23
	// PB1 as output
	OCR1A = 0xFFFF;
  3a:	8f ef       	ldi	r24, 0xFF	; 255
  3c:	9f ef       	ldi	r25, 0xFF	; 255
  3e:	9b bd       	out	0x2b, r25	; 43
  40:	8a bd       	out	0x2a, r24	; 42
	// set PWM for 50% duty cycle at 10bit
	TCCR1A |= (1 << COM1A1);
  42:	8f b5       	in	r24, 0x2f	; 47
  44:	80 68       	ori	r24, 0x80	; 128
  46:	8f bd       	out	0x2f, r24	; 47
	// set non-inverting mode
	TCCR1A |= (1 << WGM11) | (1 << WGM10);
  48:	8f b5       	in	r24, 0x2f	; 47
  4a:	83 60       	ori	r24, 0x03	; 3
  4c:	8f bd       	out	0x2f, r24	; 47
	// set 10bit phase corrected PWM Mode
	TCCR1B |= (1 << CS11);
  4e:	8e b5       	in	r24, 0x2e	; 46
  50:	82 60       	ori	r24, 0x02	; 2
  52:	8e bd       	out	0x2e, r24	; 46
	// set prescaler to 8 and starts PWM
	while (1)
	{
		for(int i=0x0000;i<0xFFFF;i=i+0x0010){
  54:	80 e0       	ldi	r24, 0x00	; 0
  56:	90 e0       	ldi	r25, 0x00	; 0
			OCR1A = i;
  58:	9b bd       	out	0x2b, r25	; 43
  5a:	8a bd       	out	0x2a, r24	; 42
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  5c:	e7 e8       	ldi	r30, 0x87	; 135
  5e:	f3 e1       	ldi	r31, 0x13	; 19
  60:	31 97       	sbiw	r30, 0x01	; 1
  62:	f1 f7       	brne	.-4      	; 0x60 <__SREG__+0x21>
  64:	00 c0       	rjmp	.+0      	; 0x66 <__SREG__+0x27>
  66:	00 00       	nop
	// set 10bit phase corrected PWM Mode
	TCCR1B |= (1 << CS11);
	// set prescaler to 8 and starts PWM
	while (1)
	{
		for(int i=0x0000;i<0xFFFF;i=i+0x0010){
  68:	40 96       	adiw	r24, 0x10	; 16
  6a:	f6 cf       	rjmp	.-20     	; 0x58 <__SREG__+0x19>

0000006c <_exit>:
  6c:	f8 94       	cli

0000006e <__stop_program>:
  6e:	ff cf       	rjmp	.-2      	; 0x6e <__stop_program>
