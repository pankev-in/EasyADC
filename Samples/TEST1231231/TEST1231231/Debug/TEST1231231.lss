
TEST1231231.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000076  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000076  000000ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ea  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000028  00000000  00000000  0000011a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000019b  00000000  00000000  00000142  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000130  00000000  00000000  000002dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000184  00000000  00000000  0000040d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000005c  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001aa  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000c3  00000000  00000000  0000079a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  0000085d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	1e c0       	rjmp	.+60     	; 0x72 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
    }
}

void serialBegin(int bandwidth){
	
	uart_init( UART_BAUD_SELECT(bandwidth,F_CPU)); 
  38:	a0 9a       	sbi	0x14, 0	; 20
  3a:	a1 9a       	sbi	0x14, 1	; 20
  3c:	84 b3       	in	r24, 0x14	; 20
  3e:	84 bb       	out	0x14, r24	; 20
  40:	2f e9       	ldi	r18, 0x9F	; 159
  42:	86 e8       	ldi	r24, 0x86	; 134
  44:	91 e0       	ldi	r25, 0x01	; 1
  46:	21 50       	subi	r18, 0x01	; 1
  48:	80 40       	sbci	r24, 0x00	; 0
  4a:	90 40       	sbci	r25, 0x00	; 0
  4c:	e1 f7       	brne	.-8      	; 0x46 <__SREG__+0x7>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <__SREG__+0x11>
  50:	00 00       	nop
  52:	85 b3       	in	r24, 0x15	; 21
  54:	15 ba       	out	0x15, r1	; 21
  56:	85 b3       	in	r24, 0x15	; 21
  58:	15 ba       	out	0x15, r1	; 21
  5a:	2f e9       	ldi	r18, 0x9F	; 159
  5c:	86 e8       	ldi	r24, 0x86	; 134
  5e:	91 e0       	ldi	r25, 0x01	; 1
  60:	21 50       	subi	r18, 0x01	; 1
  62:	80 40       	sbci	r24, 0x00	; 0
  64:	90 40       	sbci	r25, 0x00	; 0
  66:	e1 f7       	brne	.-8      	; 0x60 <__SREG__+0x21>
  68:	00 c0       	rjmp	.+0      	; 0x6a <__SREG__+0x2b>
  6a:	00 00       	nop
  6c:	a8 9a       	sbi	0x15, 0	; 21
	
	
  6e:	a9 9a       	sbi	0x15, 1	; 21
  70:	e7 cf       	rjmp	.-50     	; 0x40 <__SREG__+0x1>

00000072 <_exit>:
  72:	f8 94       	cli

00000074 <__stop_program>:
  74:	ff cf       	rjmp	.-2      	; 0x74 <__stop_program>
